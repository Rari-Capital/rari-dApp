import { ExternalLinkIcon } from "@chakra-ui/icons";
import { Box, Link, Text, Td, Tr } from "@chakra-ui/react";
import { useState } from "react";
import { FaCaretDown, FaCaretRight } from "react-icons/fa";
import { Link as RouterLink } from "react-router-dom";
import { Row } from "react-table";

import DashboardBox from "components/shared/DashboardBox";

import { smallUsdFormatter } from "utils/bigUtils";

import PoolAssetsTable from "./PoolAssetsTable";
import { tdStyle, borderBottomColor } from "./styles";
import { TableRow } from "./types/react-table-config";

/**
 * Displays a single pool's information in row form. Designed for use in the
 * `PoolsTable` component, using data generated by the React Table library.
 */
const PoolTr = ({ row }: { row: Row<TableRow> }) => {
  const { poolData } = row.original;

  const [dropdownOpened, setDropdownOpened] = useState(false);

  if (!poolData) {
    return null;
  }

  return (
    <>
      <Tr
        borderBottomColor={dropdownOpened ? "transparent" : borderBottomColor}
        onClick={() => setDropdownOpened(!dropdownOpened)}
      >
        <Td style={tdStyle} padding={0}>
          {dropdownOpened ? (
            <FaCaretDown cursor="pointer" />
          ) : (
            <FaCaretRight cursor="pointer" />
          )}
        </Td>
        {row.cells.map((cell) => {
          return (
            <Td {...cell.getCellProps()} style={tdStyle}>
              {cell.column.id === "name" && (
                // Prevent selection on double click
                <Text fontWeight="bold" userSelect="none">
                  {cell.value}
                </Text>
              )}
              {["borrowed", "supplied"].includes(cell.column.id) && (
                <Text>{smallUsdFormatter(cell.value)}</Text>
              )}
            </Td>
          );
        })}
        <Td style={tdStyle} padding={0}>
          <Link
            as={RouterLink}
            width="100%"
            className="no-underline"
            to={"/fuse/pool/" + poolData.id}
            // Call `stopPropagation` to prevent dropdown from opening
            // when a user specifically clicks on the `ExternalLinkIcon`
            onClick={(e) => e.stopPropagation()}
          >
            <ExternalLinkIcon />
          </Link>
        </Td>
      </Tr>
      {dropdownOpened && (
        <Tr>
          <Td colSpan={99} pt={0} pl={0} borderBottomColor={borderBottomColor}>
            <DashboardBox width="100%" p={4}>
              <Box my={2}>
                <Text fontWeight="bold" mb={2}>
                  Supply positions
                </Text>
                <PoolAssetsTable poolData={poolData} filter="supplied" />
              </Box>
              <Box my={2} mt={4}>
                <Text fontWeight="bold" mb={2}>
                  Borrow positions
                </Text>
                <PoolAssetsTable poolData={poolData} filter="borrowed" />
              </Box>
            </DashboardBox>
          </Td>
        </Tr>
      )}
    </>
  );
};

export default PoolTr;
